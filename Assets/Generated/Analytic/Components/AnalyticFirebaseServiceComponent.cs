//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AnalyticContext {

    public AnalyticEntity firebaseServiceEntity { get { return GetGroup(AnalyticMatcher.FirebaseService).GetSingleEntity(); } }
    public Core.Analytics.FirebaseServiceComponent firebaseService { get { return firebaseServiceEntity.firebaseService; } }
    public bool hasFirebaseService { get { return firebaseServiceEntity != null; } }

    public AnalyticEntity SetFirebaseService(Core.Analytics.IAnalyticsService newValue) {
        if (hasFirebaseService) {
            throw new Entitas.EntitasException("Could not set FirebaseService!\n" + this + " already has an entity with Core.Analytics.FirebaseServiceComponent!",
                "You should check if the context already has a firebaseServiceEntity before setting it or use context.ReplaceFirebaseService().");
        }
        var entity = CreateEntity();
        entity.AddFirebaseService(newValue);
        return entity;
    }

    public void ReplaceFirebaseService(Core.Analytics.IAnalyticsService newValue) {
        var entity = firebaseServiceEntity;
        if (entity == null) {
            entity = SetFirebaseService(newValue);
        } else {
            entity.ReplaceFirebaseService(newValue);
        }
    }

    public void RemoveFirebaseService() {
        firebaseServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AnalyticEntity {

    public Core.Analytics.FirebaseServiceComponent firebaseService { get { return (Core.Analytics.FirebaseServiceComponent)GetComponent(AnalyticComponentsLookup.FirebaseService); } }
    public bool hasFirebaseService { get { return HasComponent(AnalyticComponentsLookup.FirebaseService); } }

    public void AddFirebaseService(Core.Analytics.IAnalyticsService newValue) {
        var index = AnalyticComponentsLookup.FirebaseService;
        var component = (Core.Analytics.FirebaseServiceComponent)CreateComponent(index, typeof(Core.Analytics.FirebaseServiceComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFirebaseService(Core.Analytics.IAnalyticsService newValue) {
        var index = AnalyticComponentsLookup.FirebaseService;
        var component = (Core.Analytics.FirebaseServiceComponent)CreateComponent(index, typeof(Core.Analytics.FirebaseServiceComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFirebaseService() {
        RemoveComponent(AnalyticComponentsLookup.FirebaseService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AnalyticMatcher {

    static Entitas.IMatcher<AnalyticEntity> _matcherFirebaseService;

    public static Entitas.IMatcher<AnalyticEntity> FirebaseService {
        get {
            if (_matcherFirebaseService == null) {
                var matcher = (Entitas.Matcher<AnalyticEntity>)Entitas.Matcher<AnalyticEntity>.AllOf(AnalyticComponentsLookup.FirebaseService);
                matcher.componentNames = AnalyticComponentsLookup.componentNames;
                _matcherFirebaseService = matcher;
            }

            return _matcherFirebaseService;
        }
    }
}
