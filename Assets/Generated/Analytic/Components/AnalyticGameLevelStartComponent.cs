//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AnalyticEntity {

    static readonly Core.Analytics.GameLevelStartComponent gameLevelStartComponent = new Core.Analytics.GameLevelStartComponent();

    public bool isGameLevelStart {
        get { return HasComponent(AnalyticComponentsLookup.GameLevelStart); }
        set {
            if (value != isGameLevelStart) {
                var index = AnalyticComponentsLookup.GameLevelStart;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : gameLevelStartComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AnalyticMatcher {

    static Entitas.IMatcher<AnalyticEntity> _matcherGameLevelStart;

    public static Entitas.IMatcher<AnalyticEntity> GameLevelStart {
        get {
            if (_matcherGameLevelStart == null) {
                var matcher = (Entitas.Matcher<AnalyticEntity>)Entitas.Matcher<AnalyticEntity>.AllOf(AnalyticComponentsLookup.GameLevelStart);
                matcher.componentNames = AnalyticComponentsLookup.componentNames;
                _matcherGameLevelStart = matcher;
            }

            return _matcherGameLevelStart;
        }
    }
}
