//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AnalyticEntity {

    public FirebaseServiceInitializedListenerComponent firebaseServiceInitializedListener { get { return (FirebaseServiceInitializedListenerComponent)GetComponent(AnalyticComponentsLookup.FirebaseServiceInitializedListener); } }
    public bool hasFirebaseServiceInitializedListener { get { return HasComponent(AnalyticComponentsLookup.FirebaseServiceInitializedListener); } }

    public void AddFirebaseServiceInitializedListener(System.Collections.Generic.List<IFirebaseServiceInitializedListener> newValue) {
        var index = AnalyticComponentsLookup.FirebaseServiceInitializedListener;
        var component = (FirebaseServiceInitializedListenerComponent)CreateComponent(index, typeof(FirebaseServiceInitializedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFirebaseServiceInitializedListener(System.Collections.Generic.List<IFirebaseServiceInitializedListener> newValue) {
        var index = AnalyticComponentsLookup.FirebaseServiceInitializedListener;
        var component = (FirebaseServiceInitializedListenerComponent)CreateComponent(index, typeof(FirebaseServiceInitializedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFirebaseServiceInitializedListener() {
        RemoveComponent(AnalyticComponentsLookup.FirebaseServiceInitializedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AnalyticMatcher {

    static Entitas.IMatcher<AnalyticEntity> _matcherFirebaseServiceInitializedListener;

    public static Entitas.IMatcher<AnalyticEntity> FirebaseServiceInitializedListener {
        get {
            if (_matcherFirebaseServiceInitializedListener == null) {
                var matcher = (Entitas.Matcher<AnalyticEntity>)Entitas.Matcher<AnalyticEntity>.AllOf(AnalyticComponentsLookup.FirebaseServiceInitializedListener);
                matcher.componentNames = AnalyticComponentsLookup.componentNames;
                _matcherFirebaseServiceInitializedListener = matcher;
            }

            return _matcherFirebaseServiceInitializedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AnalyticEntity {

    public void AddFirebaseServiceInitializedListener(IFirebaseServiceInitializedListener value) {
        var listeners = hasFirebaseServiceInitializedListener
            ? firebaseServiceInitializedListener.value
            : new System.Collections.Generic.List<IFirebaseServiceInitializedListener>();
        listeners.Add(value);
        ReplaceFirebaseServiceInitializedListener(listeners);
    }

    public void RemoveFirebaseServiceInitializedListener(IFirebaseServiceInitializedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = firebaseServiceInitializedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFirebaseServiceInitializedListener();
        } else {
            ReplaceFirebaseServiceInitializedListener(listeners);
        }
    }
}
