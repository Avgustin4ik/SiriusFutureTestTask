//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventSystemGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed class LetterLabelHideEventSystem : Entitas.ReactiveSystem<UiEntity> {

    readonly System.Collections.Generic.List<ILetterLabelHideListener> _listenerBuffer;

    public LetterLabelHideEventSystem(Contexts contexts) : base(contexts.ui) {
        _listenerBuffer = new System.Collections.Generic.List<ILetterLabelHideListener>();
    }

    protected override Entitas.ICollector<UiEntity> GetTrigger(Entitas.IContext<UiEntity> context) {
        return Entitas.CollectorContextExtension.CreateCollector(
            context, Entitas.TriggerOnEventMatcherExtension.Added(UiMatcher.LetterLabelHide)
        );
    }

    protected override bool Filter(UiEntity entity) {
        return entity.hasLetterLabelHide && entity.hasLetterLabelHideListener;
    }

    protected override void Execute(System.Collections.Generic.List<UiEntity> entities) {
        foreach (var e in entities) {
            var component = e.letterLabelHide;
            _listenerBuffer.Clear();
            _listenerBuffer.AddRange(e.letterLabelHideListener.value);
            foreach (var listener in _listenerBuffer) {
                listener.OnLetterLabelHide(e, component.value);
            }
        }
    }
}
