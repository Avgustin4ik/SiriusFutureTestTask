//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AdvertisementContext {

    public AdvertisementEntity rewardedAdEntity { get { return GetGroup(AdvertisementMatcher.RewardedAd).GetSingleEntity(); } }

    public bool isRewardedAd {
        get { return rewardedAdEntity != null; }
        set {
            var entity = rewardedAdEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isRewardedAd = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AdvertisementEntity {

    static readonly Core.Advertisement.RewardedAdComponent rewardedAdComponent = new Core.Advertisement.RewardedAdComponent();

    public bool isRewardedAd {
        get { return HasComponent(AdvertisementComponentsLookup.RewardedAd); }
        set {
            if (value != isRewardedAd) {
                var index = AdvertisementComponentsLookup.RewardedAd;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : rewardedAdComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AdvertisementMatcher {

    static Entitas.IMatcher<AdvertisementEntity> _matcherRewardedAd;

    public static Entitas.IMatcher<AdvertisementEntity> RewardedAd {
        get {
            if (_matcherRewardedAd == null) {
                var matcher = (Entitas.Matcher<AdvertisementEntity>)Entitas.Matcher<AdvertisementEntity>.AllOf(AdvertisementComponentsLookup.RewardedAd);
                matcher.componentNames = AdvertisementComponentsLookup.componentNames;
                _matcherRewardedAd = matcher;
            }

            return _matcherRewardedAd;
        }
    }
}
