//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AudioEntity {

    public Core.Audio.RequestPlayAmbientComponent requestPlayAmbient { get { return (Core.Audio.RequestPlayAmbientComponent)GetComponent(AudioComponentsLookup.RequestPlayAmbient); } }
    public bool hasRequestPlayAmbient { get { return HasComponent(AudioComponentsLookup.RequestPlayAmbient); } }

    public void AddRequestPlayAmbient(UnityEngine.AudioClip newValue) {
        var index = AudioComponentsLookup.RequestPlayAmbient;
        var component = (Core.Audio.RequestPlayAmbientComponent)CreateComponent(index, typeof(Core.Audio.RequestPlayAmbientComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRequestPlayAmbient(UnityEngine.AudioClip newValue) {
        var index = AudioComponentsLookup.RequestPlayAmbient;
        var component = (Core.Audio.RequestPlayAmbientComponent)CreateComponent(index, typeof(Core.Audio.RequestPlayAmbientComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRequestPlayAmbient() {
        RemoveComponent(AudioComponentsLookup.RequestPlayAmbient);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AudioMatcher {

    static Entitas.IMatcher<AudioEntity> _matcherRequestPlayAmbient;

    public static Entitas.IMatcher<AudioEntity> RequestPlayAmbient {
        get {
            if (_matcherRequestPlayAmbient == null) {
                var matcher = (Entitas.Matcher<AudioEntity>)Entitas.Matcher<AudioEntity>.AllOf(AudioComponentsLookup.RequestPlayAmbient);
                matcher.componentNames = AudioComponentsLookup.componentNames;
                _matcherRequestPlayAmbient = matcher;
            }

            return _matcherRequestPlayAmbient;
        }
    }
}
